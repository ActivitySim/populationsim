
INTEGERIZE_WITH_BACKSTOPPED_CONTROLS: True
SUB_BALANCE_WITH_FLOAT_SEED_WEIGHTS: False
GROUP_BY_INCIDENCE_SIGNATURE: True
USE_SIMUL_INTEGERIZER: True
USE_CVXPY: True

#control_file_name: controls.csv
#data_dir: data


household_weight_col: WGTP
household_id_col: hh_id
total_hh_control: num_hh
max_expansion_factor: 5

# input_pre_processor input_table_list
input_table_list:
  - households
  - persons
  - geo_cross_walk
  # the following will eventually be created by setup_data_structures step
  - taz_control_data
  - tract_control_data
  - district_control_data
  - meta_control_data

households:
  filename : seed_households.csv
  index_col: hh_id
  column_map:
    SERIALNO: hh_id

persons:
  # expression_filename: seed_persons_expressions.csv
  filename : seed_persons.csv
  column_map:
    SERIALNO: hh_id
    SPORDER: per_num

geo_cross_walk:
  filename : geo_cross_walk.csv
  column_map:
    TRACTCE: TRACT

taz_control_data:
  filename : taz_controls.csv

tract_control_data:
  filename : tract_controls.csv

district_control_data:
  filename : district_controls.csv

meta_control_data:
  filename : region_controls.csv

#geographies: [meta, seed, mid, low]
#seed_geography: seed
geographies: [REGION, PUMA, DISTRICT, TRACT, TAZ]
seed_geography: PUMA
crosswalk_data_table: geo_cross_walk

geography_settings:
  REGION:
    control_data_table: meta_control_data
    id_column: REGION
  PUMA:
    id_column: PUMA
  DISTRICT:
    control_data_table: district_control_data
    id_column: DISTRICT
  TRACT:
    control_data_table: tract_control_data
    id_column: TRACT
  TAZ:
    control_data_table: taz_control_data
    id_column: TAZ


models:
  - input_pre_processor
  - setup_data_structures
  - initial_seed_balancing
  - meta_control_factoring
  - final_seed_balancing
  - integerize_final_seed_weights
  - sub_balancing.geography = DISTRICT
  - sub_balancing.geography = TRACT
  - sub_balancing.geography=TAZ
  # expand household and person records with final weights
  # to one household and one person record per weight with unique IDs
  - expand_population
  - summarize
  # write the household and person files to CSV files
  - write_results
